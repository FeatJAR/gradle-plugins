/**
 * Contains conventions shared between Gradle builds that compile Java code.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.hierynomus.license'
    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
    id 'pl.allegro.tech.build.axion-release'
}

repositories {
    mavenCentral()
}

group = 'de.featjar'
version = scmVersion.version

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

java {
    sourceCompatibility = 1.11
    withSourcesJar()
//    withJavadocJar()
}

test {
    useJUnitPlatform()
}

task copyBinaries (type: Copy) {
    from 'src/main/resources/bin/.'
    into System.getProperty('user.home') + '/.featjar-bin'
}
tasks.matching { it != copyBinaries }.all { it.dependsOn copyBinaries }

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

license {
    header = null
    headerURI = DeFeatjarJavaPlugin.class.getResource('licenseHeaders/lgpl30.txt').toURI()
    ext {
        program = rootProject.name
        year = Calendar.getInstance().get(Calendar.YEAR)
        author = 'FeatJAR development team'
        url = 'https://github.com/FeatJAR'
    }
    include "**/*.java"
    ignoreFailures true // todo: discuss whether to enable always
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

spotless {
    enforceCheck = false // todo: discuss whether to enable always
    java {
        importOrder()
        removeUnusedImports()
        palantirJavaFormat() // todo: discuss format
    }
}

def spotbugsConfiguration = {
    reports {
        html {
            enabled = true
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugs {
    ignoreFailures = true // todo: discuss whether to enable always
}

spotbugsMain {
    configure spotbugsConfiguration
}

spotbugsTest {
    configure spotbugsConfiguration
}